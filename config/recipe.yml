# This file can only be edited inside the uBlue image's git repository.

# The image will be at "ghcr.io/yourusername/name".
name: leo-fedora

# The native container image to build on top of.
# Warning: Non-uBlue images might not work properly, due to missing components.
base-image: ghcr.io/ublue-os/kinoite-main
image-version: 39 # latest is also supported if you want new updates ASAP

# This description will be visible in the container metadata.
description: This is my personal OS image.

# These scripts will be executed during the container build.
# Place scripts in the "scripts/" dir and put the corresponding filenames here.
# Any files that aren't listed here won't be executed automatically, which
# means that you can place "helper" or "library" scripts in the folder too.
# You can use "autorun.sh" if you want an automatic runner.
scripts:
  # "Pre" scripts run very early in the build, immediately after your custom
  # repos have been imported (so that you can access those repos if necessary).
  pre:
    # Automatically runs script files within "scripts/pre/".
    - autorun.sh
    # Manually listed scripts.
    # - example_pre.sh

    # "Post" scripts run at the end of the build process.
  post:
    # Automatically runs script files within "scripts/post/".
    - autorun.sh
    # Manually listed scripts.
    # - example_post.sh

    # Custom RPM configuration.
    # These changes will be integrated into your custom image at the "system level".
modules:
  - type: bling # configure what to pull in from ublue-os/bling
    install:
      - justfiles # add "!include /usr/share/ublue-os/just/100-bling.just"
                  # in your custom.just (added by default) or local justfile
      - nix-installer # shell shortcuts for determinate system's nix installers
      - ublue-os-wallpapers
      # - ublue-update # https://github.com/ublue-os/ublue-update
      # - 1password # install 1Password (stable) and `op` CLI tool
      # - dconf-update-service # a service unit that updates the dconf db on boot
      # - devpod # https://devpod.sh/ as an rpm
      # - gnome-vrr # enables gnome-vrr for your image
      # - container-tools # installs container-related tools onto /usr/bin: kind, kubectx, docker-compose and kubens
      # - laptop # installs TLP and configures your system for laptop usage
      # - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section
  - type: files
    files:
      - usr: /usr # copy static configurations
                  #
                  # copies config/files/usr into your image's /usr
                  #
                  # configuration you wish to end up in /etc/ on the booted system
                  # should be added into /usr/etc/ as that is the proper "distro"
                  # config directory on ostree. Read more in the files module's README

  - type: rpm-ostree
    # A list of urls of ".repo" files that should be added to your system.
    # This is the proper way to add custom COPR repos to your image.
    # Tip: Use `%OS_VERSION%` instead of static Fedora version numbers,
    # so that your repos automatically use your image's actual Fedora version,
    # which greatly simplifies future maintenance of your custom recipe.
    repos:
      # Example (which also demonstrates version number expansion):
      # - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/ayoungdukie/Personal_Repo/repo/fedora-%OS_VERSION%/ayoungdukie-Personal_Repo-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/observeroftime/betterdiscordctl/repo/fedora-%OS_VERSION%/observeroftime-betterdiscordctl-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/rob72/86Box/repo/fedora-%OS_VERSION%/rob72-86Box-%OS_VERSION%.repo
      - https://copr.fedorainfracloud.org/coprs/jstaf/onedriver/repo/fedora-%OS_VERSION%/jstaf-onedriver-%OS_VERSION%.repo
      - https://download.opensuse.org/repositories/home:/jejb1:/Element/Fedora_38/home:jejb1:Element.repo
      - https://rpm.librewolf.net/librewolf-repo.repo
      #- http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo
      - https://pkgs.tailscale.com/stable/fedora/tailscale.repo
  
    # These RPMs will be installed from your enabled repositories (Fedora's own
    # repos, extra "repos" you've added, etc). The installation is automatically
    # performed via rpm-ostree during the image build, and will be pre-installed
    # at the "system level" in the final image.
    install:
      # Needed for yafti (the first boot installer). Remove if you're not using yafti.
      - python3-pip
      # GNOME's GTK4 theme, Libadwaita. Already included in Silverblue, but not
      # other spins. You can remove if you aren't using yafti, but many native
      # apps and binaries require it, so it's a good idea to always include it
      # if you ever download or compile any custom software on your machine.
      - libadwaita
      # Add your own below:
      # Example:
      # - tilix
      - onedrive
      - xwaylandvideobridge
      - distrobox 
      - libva-intel-driver
      - mesa-va-drivers-freeworld
      - mesa-vdpau-drivers-freeworld
      - ffmpeg
      - gstreamer1-plugin-libav
      - gstreamer1-plugins-bad-free-extras 
      - gstreamer1-plugins-ugly 
      - gstreamer1-vaapi 
      - steam-devices
      - wezterm
      - https://github.com/TheAssassin/AppImageLauncher/releases/download/v2.2.0/appimagelauncher-2.2.0-travis995.0f91801.x86_64.rpm
      #- VirtualBox
      - zsh
      - tailscale
      - neofetch
      - python3-neovim
      - make
      - nodejs
      - latte-dock
      - intel-gpu-tools
      - lm_sensors
      - intel-media-driver
      - binutils
      - bat
      - gcc-c++
      - imsettings
      - flameshot
      - onedriver
      - fcitx5-chinese-addons
      - fcitx5-configtool
      - fcitx5-gtk
      - fcitx5-qt
      - fcitx5-table-extra
      - fcitx5-table-other
      - virt-manager
      - tlp
      - tlp-rdw
      - bottles
      - powertop
#     - dnf5
#     - dnf5-plugins
      - fedora-packager-kerberos
      - krb5-workstation
      - krb5-pkinit
      - libsecret
      - librewolf
      - gnome-keyring
      - https://github.com/Foundry376/Mailspring/releases/download/1.11.0/mailspring-1.11.0-0.1.x86_64.rpm

      # These RPMs will be removed from the system image. This step happens during
      # image build, BEFORE installing custom RPMs (from the "rpm.install" category).
    remove:
      # Remove the native firefox (from Fedora) in favor of the Flatpak.
      - firefox
      - firefox-langpacks
      - mesa-va-drivers-freeworld
        #- libavfilter-free
        #    - libavformat-free 
        #- libavutil-free 
        #- libpostproc-free 
        #- libswresample-free 
        #- libswscale-free
      - toolbox
      - steam-devices
  - type: yafti # if included, yafti and it's dependencies (pip & libadwaita)
              #  will be installed and set up
    custom-flatpaks: # this section is optional
      - runtime/org.freedesktop.Platform.VulkanLayer.gamescope/x86_64/23.08
      - io.github.celluloid_player.Celluloid
      - org.kde.krita
      - com.github.tchx84.Flatseal
      - com.github.zadam.trilium
      - com.moonlight_stream.Moonlight
      - com.spotify.Client
      - com.valvesoftware.SteamLink
      - com.yubico.yubioath
      - org.localsend.localsend_app
      - org.prismlauncher.PrismLauncher
      - org.bluesabre.MenuLibre
      - org.libreoffice.LibreOffice
#    - io.gitlab.librewolf-community
      - runtime/org.freedesktop.Platform.ffmpeg-full/x86_64/23.08
      - com.discordapp.Discord
      - com.github.Eloston.UngoogledChromium
      - com.github.Matoking.protontricks
      - com.github.d4nj1.tlpui
      - com.github.jeromerobert.pdfarranger
      - com.github.xournalpp.xournalpp
      - dev.krtirtho.Flemozi
      - io.github.celluloid_player.Celluloid
      - io.github.seadve.Kooha
      - io.missioncenter.MissionCenter
      - net.lutris.Lutris
      - org.freedesktop.Platform.VulkanLayer.MangoHud
      - org.godotengine.Godot
      - org.gustavoperedo.FontDownloader
      - org.kicad.KiCad
      - org.localsend.localsend_app
      - org.prismlauncher.PrismLauncher
  - type: script
    scripts:
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
